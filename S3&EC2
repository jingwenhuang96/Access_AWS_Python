# Before using the scripts below, type in "pip install awscli" in Terminal, and run "aws configur" 
# to write in AWS Access Key ID,AWS Secret Access Key, Default region name, and Default output format [None]: 

# S3
# 1. Upload a file
import boto3
s3 = boto3.client('s3')
# change the target file name, bucket name and save name
source_filename = 'S3_testfile1.txt'
bucket_name = 'jingwen-exercise'
source_savename = 'S3_testfile.txt'
# upload your file into s3 bucket
s3.upload_file(source_filename, bucket_name, source_savename)


# 2. Download a file
import boto3
import botocore
# replace with your bucket name
BUCKET_NAME = 'jingwen-exercise' 
# replace with your object file
KEY = 'S3_script.txt' 
s3 = boto3.resource('s3')

try:
    s3.Bucket(BUCKET_NAME).download_file(KEY, 'S3_download.txt')
except botocore.exceptions.ClientError as e:
    if e.response['Error']['Code'] == "404":
        print("The object does not exist.")
    else:
        raise


#EC2
# 1.Create an instance
import logging
import boto3
from botocore.exceptions import ClientError
# create a function to launch new instance
def create_ec2_instance(image_id, instance_type, keypair_name):
    ec2 = boto3.client('ec2')
    try:
        # launch new instance
        instance = ec2.run_instances(ImageId=image_id,
                                     InstanceType=instance_type,
                                     KeyName=keypair_name,
                                     MinCount=1,
                                     MaxCount=1,
                                     Monitoring={
                                         'Enabled': False
                                     }
                                     )
    except ClientError as e:
        logging.error(e)
        return None
    return instance['Instances'][0]

# Assign customized values
image_id = 'ami-0c64dd618a49aeee8' # choose AMI ID
instance_type = 't2.micro' # choose instance type
keypair_name = 'jingwenexercise' # choosing an exiting key pair name

# run function to launch intance
create_ec2_instance(image_id, instance_type, keypair_name)


# 2.Terminate an instance
import boto3
ec2 = boto3.client('ec2')
# get the detailed infomation of each instances, including the InstanceIds
descri_instance = ec2.describe_instances()
print(descri_instance)
# stop an instance, replace the instance id since we already know each instance id from the result of descri_instance
ec2.stop_instances(InstanceIds=['i-080dd68bd0bc31d9a'])
# terminate an instance, replace the instance id
ec2.terminate_instances(InstanceIds=['i-0592e8d5a3fc84c75'])




